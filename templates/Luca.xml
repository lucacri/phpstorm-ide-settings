<templateSet group="Luca">
  <template name="b4-input" value="&lt;div class=&quot;form-group&quot;&gt;&#10;                            &lt;label for=&quot;$FIELD$&quot;&gt;$NAME$&lt;/label&gt;&#10;                            &lt;input type=&quot;text&quot;&#10;                                   class=&quot;form-control {{ $errors-&gt;has('$FIELD$') ? 'is-invalid':'' }}&quot; name=&quot;$FIELD$&quot;&#10;                                   required&#10;                                   placeholder=&quot;&quot;/&gt;&#10;                            &lt;div class=&quot;invalid-feedback&quot;&gt;&#10;                                {{ $errors-&gt;first('$FIELD$') }}&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;" description="Input with validation" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="title" alwaysStopAt="true" />
    <variable name="FIELD" expression="snakeCase(NAME)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="JAVA_SCRIPT" value="false" />
      <option name="JSON" value="false" />
      <option name="OTHER" value="true" />
      <option name="SQL" value="false" />
      <option name="Twig" value="false" />
      <option name="TypeScript" value="false" />
      <option name="Vue" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="phptest" value="/**&#10;* $TEST_NAME$&#10;* @returns void&#10;* @covers ::$COVERS$&#10;**/&#10;public function test_$TEST_BETTER$() :void{&#10;    $END$&#10;}&#10;" description="PHPUnit test" toReformat="true" toShortenFQNames="true">
    <variable name="TEST_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="COVERS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TEST_BETTER" expression="snakeCase(TEST_NAME)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="faicon" value="&lt;font-awesome-icon icon=&quot;$FIELD$&quot;&gt;&lt;/font-awesome-icon&gt;" description="Font awesom icon vue" toReformat="true" toShortenFQNames="true">
    <variable name="FIELD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
      <option name="Vue" value="true" />
    </context>
  </template>
  <template name="faicons" value="&lt;font-awesome-icon :icon=&quot;['$FIELD$', '$FIELD2$']&quot;&gt;&lt;/font-awesome-icon&gt;" description="Font awesom icons vue" toReformat="true" toShortenFQNames="true">
    <variable name="FIELD" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FIELD2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
      <option name="Vue" value="true" />
    </context>
  </template>
  <template name="test" value="test('$TESTNAME$', () =&gt; {&#10;    $END$&#10;})" description="Jest Test" toReformat="false" toShortenFQNames="true">
    <variable name="TESTNAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="scope" value="/**&#10;*  $SCOPE_NAME$&#10;*&#10;* @param \Illuminate\Database\Eloquent\Builder $query&#10;* &#10;* @return \Illuminate\Database\Eloquent\Builder&#10;**/&#10;public function $SCOPE_BETTER$($query){&#10;   return $query-&gt;$END$&#10;}&#10;" description="Laravel Model Scope" toReformat="false" toShortenFQNames="true">
    <variable name="SCOPE_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="SCOPE_BETTER" expression="camelCase(concat(&quot;scope&quot;, &quot; &quot;, SCOPE_NAME))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="laattribute" value="/**&#10;*  $ATTRIBUTE_NAME$&#10;*&#10;* @param string $value&#10;* &#10;* @return $string&#10;**/&#10;public function $ATTRIBUTE_BETTER$($value){&#10;   return $END$;&#10;}&#10;" description="Laravel Model Attribute" toReformat="true" toShortenFQNames="true">
    <variable name="ATTRIBUTE_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ATTRIBUTE_BETTER" expression="camelCase(concat(&quot;get&quot;, &quot; &quot;, ATTRIBUTE_NAME, &quot;Attribute&quot;))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
</templateSet>